// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using CovidInfo.Data;
//
//    var dataSource = DataSource.FromJson(jsonString);

namespace CovidInfo.Data
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class DataSource
    {
        [JsonProperty("code")]
        public long Code { get; set; }

        [JsonProperty("data")]
        public List<Datum> Data { get; set; }
    }

    public partial class Datum
    {
        [JsonProperty("location")]
        public string Location { get; set; }

        [JsonProperty("country_code")]
        public string CountryCode { get; set; }

        [JsonProperty("latitude")]
        public double Latitude { get; set; }

        [JsonProperty("longitude")]
        public double Longitude { get; set; }

        [JsonProperty("confirmed")]
        public long Confirmed { get; set; }

        [JsonProperty("dead")]
        public long Dead { get; set; }

        [JsonProperty("recovered")]
        public long Recovered { get; set; }

        [JsonProperty("updated")]
        public DateTimeOffset Updated { get; set; }
    }

    public partial class DataSource
    {
        public static DataSource FromJson(string json) => JsonConvert.DeserializeObject<DataSource>(json, CovidInfo.Data.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this DataSource self) => JsonConvert.SerializeObject(self, CovidInfo.Data.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
